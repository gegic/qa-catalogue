      options.addOption("m", "marcVersion", true, "MARC version ('OCLC' or 'DNB')");
      options.addOption("h", "help", false, "display help");
      options.addOption("n", "nolog", false, "do not display log messages");
      options.addOption("l", "limit", true, "limit the number of records to process");
      options.addOption("o", "offset", true, "the first record to process");
      options.addOption("i", "id", true, "the MARC identifier (content of 001)");
      options.addOption("d", "defaultRecordType", true, "the default record type if the record's type is undetectable");
      options.addOption("q", "fixAlephseq", false, "fix the known issues of Alephseq format");
      options.addOption("a", "fixAlma", false, "fix the known issues of Alma format");
      options.addOption("b", "fixKbr", false, "fix the known issues of Alma format");
      options.addOption("p", "alephseq", false, "the source is in Alephseq format");
      options.addOption("x", "marcxml", false, "the source is in MARCXML format");
      options.addOption("y", "lineSeparated", false, "the source is in line separated MARC format");
      options.addOption("t", "outputDir", true, "output directory");
      options.addOption("r", "trimId", false, "remove spaces from the end of record IDs");
      options.addOption("z", "ignorableFields", true, "ignore fields from the analysis");
      options.addOption("v", "ignorableRecords", true, "ignore records from the analysis");
      options.addOption("f", "marcFormat", true, "MARC format (like 'ISO' or 'MARCXML')");
      options.addOption("s", "dataSource", true, "data source (file of stream)");
      options.addOption("g", "defaultEncoding", true, "default character encoding");
      options.addOption("1", "alephseqLineType", true, "Alephseq line type");
      options.addOption("2", "picaIdField", true, "PICA id field");
      options.addOption("u", "picaSubfieldSeparator", true, "PICA subfield separator");
      options.addOption("j", "picaSchemaFile", true, "Avram PICA schema file");
      options.addOption("w", "schemaType", true, "metadata schema type ('MARC21', 'UNIMARC', or 'PICA')");
      options.addOption("k", "picaRecordType", true, "picaRecordType");
      options.addOption("c", "allowableRecords", true, "allow records for the analysis");
      options.addOption("e", "groupBy", true, "group the results by the value of this data element (e.g. the ILN of  library)");
      options.addOption("3", "groupListFile", true, "the file which contains a list of ILN codes");
      options.addOption("4", "solrForScoresUrl", true, "the URL of the Solr server used to store scores");
      options.addOption("G", "summaryFileName", true, "the summary file name (provides a summary of issues, such as the number of instance and number of records having the particular issue)");
      options.addOption("S", "summary", false, "show summary instead of record level display");
      options.addOption("H", "details", false, "show record level display");
      options.addOption("F", "detailsFileName", true, "the report file name (default is 'issue-details.csv')");
      options.addOption("R", "format", true, "specify a format");
      options.addOption("W", "emptyLargeCollectors", false, "empty large collectors");
      options.addOption("T", "collectAllErrors", false, "collect all errors (useful only for validating small number of records)");
      options.addOption("I", "ignorableIssueTypes", true, "comma separated list of issue types not to collect");
